// pages/vip/vip-purchase/vip-purchase.js
const cloudAPI = require('../../../api/cloud-api.js');

Page({
  data: {
    // VIPÁâπÊùÉÂàóË°®
    privileges: [
      {
        icon: 'üåü',
        title: 'Êü•ÁúãVIP‰∏ìÂ±ûÈ≤úËä±‰ø°ÊÅØ',
        description: '‰ºòÂÖàÊü•ÁúãÈ´òÁ´Ø‰ºòË¥®È≤úËä±ËµÑÊ∫êÔºåËé∑ÂèñÊõ¥Â§öÂïÜÊú∫'
      },
      {
        icon: 'üìû',
        title: 'Ëé∑ÂèñVIPÂïÜÂÆ∂ËÅîÁ≥ªÊñπÂºè',
        description: 'Áõ¥Êé•Êã®ÊâìÁîµËØùËÅîÁ≥ªÂïÜÂÆ∂ÔºåÊó†ÈúÄÁ≠âÂæÖ'
      },
      {
        icon: 'üéØ',
        title: '‰ºòÂÖàÊü•ÁúãÈ´òÁ´ØÈ≤úËä±ËµÑÊ∫ê',
        description: 'Á¨¨‰∏ÄÊó∂Èó¥Ëé∑ÂèñÊúÄÊñ∞ÊúÄ‰ºòË¥®ÁöÑÈ≤úËä±‰ø°ÊÅØ'
      },
      {
        icon: 'üë®‚Äçüíº',
        title: '‰∏ìÂ±ûÂÆ¢Êúç‰∏ÄÂØπ‰∏ÄÊúçÂä°',
        description: 'ÈÅáÂà∞ÈóÆÈ¢òÈöèÊó∂Âí®ËØ¢Ôºå‰∏ì‰∏öÂÆ¢ÊúçÂø´ÈÄüÂìçÂ∫î'
      },
      {
        icon: 'üíé',
        title: 'ÊØèÊó•Êé®ËçêÁ≤æÈÄâ‰ø°ÊÅØ',
        description: 'Ê†πÊçÆÊÇ®ÁöÑÈúÄÊ±ÇÊô∫ËÉΩÊé®ËçêÂêàÈÄÇÁöÑÈ≤úËä±‰ø°ÊÅØ'
      }
    ],

    // VIPÂ•óÈ§êÂàóË°®Ôºà‰ªé‰∫ëÁ´ØÈÖçÁΩÆÂä†ËΩΩÔºâ
    plans: [],

    // ÂΩìÂâçÈÄâ‰∏≠ÁöÑÂ•óÈ§êID
    selectedPlan: '',

    // ÂΩìÂâçÈÄâ‰∏≠Â•óÈ§êÁöÑ‰ª∑Ê†º
    selectedPlanPrice: 0,

    // Áî®Êà∑‰ø°ÊÅØ
    userInfo: null
  },

  async onLoad() {
    console.log('[vip-purchase] È°µÈù¢Âä†ËΩΩ');

    // Ëé∑ÂèñÁî®Êà∑‰ø°ÊÅØ
    const userInfo = wx.getStorageSync('userInfo');
    if (!userInfo || !userInfo.openid) {
      wx.showModal({
        title: 'ÈúÄË¶ÅÁôªÂΩï',
        content: 'ËØ∑ÂÖàÁôªÂΩïÂêéÂÜçË¥≠‰π∞VIP',
        confirmText: 'ÂéªÁôªÂΩï',
        success: (res) => {
          if (res.confirm) {
            wx.navigateBack();
            wx.navigateTo({
              url: '/pages/profile/profile'
            });
          } else {
            wx.navigateBack();
          }
        }
      });
      return;
    }

    this.setData({ userInfo });

    // Âä†ËΩΩVIPÂ•óÈ§êÈÖçÁΩÆ
    await this.loadVIPPlans();
  },

  /**
   * Âä†ËΩΩVIPÂ•óÈ§êÈÖçÁΩÆ
   */
  async loadVIPPlans() {
    try {
      wx.showLoading({ title: 'Âä†ËΩΩ‰∏≠...' });

      // Ë∞ÉÁî®‰∫ëÂáΩÊï∞Ëé∑ÂèñVIPÂ•óÈ§êÈÖçÁΩÆ
      const result = await wx.cloud.callFunction({
        name: 'vipManager',
        data: {
          action: 'getPlans'
        }
      });

      if (result.result && result.result.success) {
        const plans = result.result.data || [];

        // Â¶ÇÊûúÊ≤°ÊúâÈÖçÁΩÆÔºå‰ΩøÁî®ÈªòËÆ§Â•óÈ§ê
        if (plans.length === 0) {
          plans.push(
            {
              id: '1month',
              duration: '1‰∏™Êúà',
              unit: 'Êúà',
              price: 29.9,
              originalPrice: null,
              save: null,
              badge: null
            },
            {
              id: '3months',
              duration: '3‰∏™Êúà',
              unit: '3‰∏™Êúà',
              price: 79.9,
              originalPrice: 89.7,
              save: 9.8,
              badge: 'Êé®Ëçê'
            },
            {
              id: '6months',
              duration: '6‰∏™Êúà',
              unit: '6‰∏™Êúà',
              price: 149.9,
              originalPrice: 179.4,
              save: 29.5,
              badge: 'Ë∂ÖÂÄº'
            },
            {
              id: '1year',
              duration: '1Âπ¥',
              unit: 'Âπ¥',
              price: 269.9,
              originalPrice: 358.8,
              save: 88.9,
              badge: 'ÊúÄÂàíÁÆó'
            }
          );
        }

        // ÈªòËÆ§ÈÄâ‰∏≠Á¨¨‰∫å‰∏™Â•óÈ§êÔºàÊé®ËçêÂ•óÈ§êÔºâ
        const defaultPlan = plans[1] || plans[0];
        this.setData({
          plans,
          selectedPlan: defaultPlan.id,
          selectedPlanPrice: defaultPlan.price
        });

        console.log('[vip-purchase] VIPÂ•óÈ§êÂä†ËΩΩÊàêÂäü:', plans);
      } else {
        throw new Error(result.result?.message || 'Âä†ËΩΩÂ•óÈ§êÂ§±Ë¥•');
      }
    } catch (error) {
      console.error('[vip-purchase] Âä†ËΩΩVIPÂ•óÈ§êÂ§±Ë¥•:', error);
      wx.showToast({
        title: 'Âä†ËΩΩÂ•óÈ§êÂ§±Ë¥•',
        icon: 'none'
      });

      // ‰ΩøÁî®ÈªòËÆ§Â•óÈ§ê
      const defaultPlans = [
        {
          id: '1month',
          duration: '1‰∏™Êúà',
          unit: 'Êúà',
          price: 29.9,
          originalPrice: null,
          save: null,
          badge: null
        },
        {
          id: '3months',
          duration: '3‰∏™Êúà',
          unit: '3‰∏™Êúà',
          price: 79.9,
          originalPrice: 89.7,
          save: 9.8,
          badge: 'Êé®Ëçê'
        },
        {
          id: '6months',
          duration: '6‰∏™Êúà',
          unit: '6‰∏™Êúà',
          price: 149.9,
          originalPrice: 179.4,
          save: 29.5,
          badge: 'Ë∂ÖÂÄº'
        },
        {
          id: '1year',
          duration: '1Âπ¥',
          unit: 'Âπ¥',
          price: 269.9,
          originalPrice: 358.8,
          save: 88.9,
          badge: 'ÊúÄÂàíÁÆó'
        }
      ];

      this.setData({
        plans: defaultPlans,
        selectedPlan: '3months',
        selectedPlanPrice: 79.9
      });
    } finally {
      wx.hideLoading();
    }
  },

  /**
   * ÈÄâÊã©Â•óÈ§ê
   */
  onSelectPlan(e) {
    const planId = e.currentTarget.dataset.id;
    const selectedPlan = this.data.plans.find(p => p.id === planId);

    if (selectedPlan) {
      this.setData({
        selectedPlan: planId,
        selectedPlanPrice: selectedPlan.price
      });
      console.log('[vip-purchase] ÈÄâÊã©Â•óÈ§ê:', selectedPlan);
    }
  },

  /**
   * Ë¥≠‰π∞VIP
   */
  async onPurchase() {
    if (!this.data.selectedPlan) {
      wx.showToast({
        title: 'ËØ∑ÈÄâÊã©Â•óÈ§ê',
        icon: 'none'
      });
      return;
    }

    const selectedPlan = this.data.plans.find(p => p.id === this.data.selectedPlan);
    if (!selectedPlan) {
      wx.showToast({
        title: 'Â•óÈ§ê‰ø°ÊÅØÈîôËØØ',
        icon: 'none'
      });
      return;
    }

    try {
      wx.showLoading({ title: 'Ê≠£Âú®ÂàõÂª∫ËÆ¢Âçï...' });

      // Ë∞ÉÁî®‰∫ëÂáΩÊï∞ÂàõÂª∫ÊîØ‰ªòËÆ¢Âçï
      const result = await wx.cloud.callFunction({
        name: 'vipManager',
        data: {
          action: 'createOrder',
          openid: this.data.userInfo.openid,
          planId: selectedPlan.id,
          planDuration: selectedPlan.duration,
          price: selectedPlan.price
        }
      });

      wx.hideLoading();

      if (result.result && result.result.success) {
        const paymentData = result.result.data;

        // Ë∞ÉÁî®ÂæÆ‰ø°ÊîØ‰ªò
        wx.requestPayment({
          timeStamp: paymentData.timeStamp,
          nonceStr: paymentData.nonceStr,
          package: paymentData.package,
          signType: 'RSA',
          paySign: paymentData.paySign,
          success: (res) => {
            console.log('[vip-purchase] ÊîØ‰ªòÊàêÂäü:', res);
            wx.showModal({
              title: 'ÊîØ‰ªòÊàêÂäü',
              content: 'VIP‰ºöÂëòÂ∑≤ÂºÄÈÄöÔºåÁ´ãÂç≥ÁîüÊïàÔºÅ',
              showCancel: false,
              success: () => {
                // ËøîÂõû‰∏ä‰∏ÄÈ°µ
                wx.navigateBack();
              }
            });
          },
          fail: (error) => {
            console.error('[vip-purchase] ÊîØ‰ªòÂ§±Ë¥•:', error);
            if (error.errMsg.includes('cancel')) {
              wx.showToast({
                title: 'Â∑≤ÂèñÊ∂àÊîØ‰ªò',
                icon: 'none'
              });
            } else {
              wx.showToast({
                title: 'ÊîØ‰ªòÂ§±Ë¥•',
                icon: 'none'
              });
            }
          }
        });
      } else {
        throw new Error(result.result?.message || 'ÂàõÂª∫ËÆ¢ÂçïÂ§±Ë¥•');
      }
    } catch (error) {
      wx.hideLoading();
      console.error('[vip-purchase] Ë¥≠‰π∞VIPÂ§±Ë¥•:', error);
      wx.showToast({
        title: error.message || 'Ë¥≠‰π∞Â§±Ë¥•',
        icon: 'none'
      });
    }
  }
});
